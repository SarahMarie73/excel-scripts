function main(workbook: ExcelScript.Workbook) {
    // Get the currently highlighted range in the workbook.
    let range = workbook.getSelectedRange();
    let rangeAddress = range.getAddress();
    
    // Get the that range's value
    let cellInputs = range.getValues();
    let timeInSecondsArr: Array<number>;
    timeInSecondsArr = [];

    // Get cell values and add to array
    cellInputs.forEach((columnItem, columnIndex) => {
        cellInputs[columnIndex].forEach((rowItem, rowIndex) => {
            timeInSecondsArr.push(Number(rowItem));
        });
    });

    // Set the output range of cells.
    let rightCells = range.getOffsetRange(0, 1);
    let cellOutputs = rightCells.getValues();

    // Initialize array to add converted values to.
    let convertedValuesArr: Array<string>;
    convertedValuesArr = [];

    function convertValues() {
        let result = "";
        
        // convert the values.
        for (let i = 0; i < timeInSecondsArr.length; i++) {
            let timeInSeconds = timeInSecondsArr[i];
            let rightCell = range.getOffsetRange(0, 1);
            // Get the value for the ss in h:mm:ss
            function getSeconds() {
                let seconds = Math.floor(timeInSeconds % 60);
                return seconds;
            }
            // Get the value for the mm in h:mm:ss
            function getMinutes() {
                let m = Math.floor(timeInSeconds / 60);
                let minutes = m % 60;
                return minutes;
            }
            // Get the value for h in h:mm:ss
            function getHours() {
                let h = Math.floor(timeInSeconds / 60);
                let hours = Math.floor(h / 60);
                return hours;
            }
            result = (`${getHours()}:${getMinutes()}:${getSeconds()}`);
            convertedValuesArr.push(result); 
        }
        return result;
    }

    convertValues();

    let newValues = "";

    cellOutputs.forEach((columnItem, columnIndex) => {
        cellOutputs[columnIndex].forEach((rowItem, rowIndex) => {
            convertedValuesArr.push(rowItem as string);
            console.log(cellOutputs);
            console.log(convertedValuesArr);
        });
    });
    


    // for (let i = 0; i < convertedValuesArr.length; i++) {
    //     newValues = convertedValuesArr[i];
    //     rightCells.setValues(newValues);
    //     console.log(newValues);
    // } 
